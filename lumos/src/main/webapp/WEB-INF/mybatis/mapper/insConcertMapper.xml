<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="concerts">


<!-- select box 용 리스트  -->
<select id="listHall" resultType="com.sp.admin.insertCon.Concerts">
	SELECT hallNum,hallName FROM concertHall
</select>

<select id="listRate" resultType="com.sp.admin.insertCon.Concerts">
	SELECT ratingNum,ratingName FROM rating
</select>

<select id="listLevel" resultType="com.sp.admin.insertCon.Concerts">
	SELECT seatlevelnum, seatLevel FROM seatlevel
</select>
<select id="listnames" resultType="com.sp.admin.insertCon.Concerts">
	SELECT concertNum, concertName FROM concert
</select>

<!--   편하게 검색할 수 있는  searchList -->

<sql id="where-list">
   <if test="searchKey=='concertNum' ">
        concertNum=#{searchValue}
   </if>
   <if test="searchKey=='concertName' ">
        INSTR(concertName, #{searchValue}) &gt; 0
   </if>
   <if test="searchKey=='content' ">
        DBMS_LOB.INSTR(content, #{searchValue}) &gt; 0
   </if>
   <if test="searchKey=='concertStart' ">
        (TO_CHAR(concertStart, 'YYYY-MM-DD') = #{searchValue}
         OR TO_CHAR(c.concertStart, 'YYYYMMDD') = #{searchValue})
   </if>
</sql>

<select id="dataCount" resultType="Integer" parameterType="map">
	SELECT NVL(COUNT (*),0) FROM concert 
	<where>
  	<if test="searchValue!=null and searchValue != '' ">
  	      <include refid="where-list"/>
  	</if>
  </where>
</select>

<insert id="insertConcerts" parameterType="com.sp.admin.insertCon.Concerts"> 
	<!-- INSERT INTO concert (concertNum,concertName, concertStart,concertEnd, totalTime,host,supervise,
						 genre, ratingNum,hallNum, conProfileImage,eventCount,seatPriceList)
				VALUES (concert_seq.NEXTVAL, #{concertName},#{concertStart},#{concertEnd},#{totalTime},
						#{host},#{supervise},#{genre},#{ratingNum},#{hallNum},#{conProfileImage},#{eventCount},#{seatPriceList})
	INSERT INTO concertSession (concertNum, sessionNum, sessionTime) VALUES concert_seq.NEXTVAL, session_seq.NEXTVAL, #{sessionTime}) 
	INSERT INTO seatPrice (concertNum, seatlevelnum, seatlevel, seatPrice) 
				VALUES (concert_seq.NEXTVAL, seatlevel_seq.NEXTVAL, #{seatLevel}, #{seatPrice})  -->
	INSERT 
		INTO concert (concertNum, concertName, concertStart, concertEnd,totalTime, host, supervise, genre,
						ratingNum, hallNum, conProfileImage, eventCount, seatPriceList)
				VALUES (concert_seq.NEXTVAL,#{concertName},#{concertStart},#{concertEnd},#{totalTime},
						#{host},#{supervise},#{genre},#{ratingNum},#{hallNum},#{conProfileImage},#{eventCount},#{seatPriceList})
		<!-- INTO concertSession (concertNum, sessionNum, sessionTime)
					VALUES   (concert_seq.NEXTVAL, #{sessionNum}, #{sessionTime})
		INTO seatPrice		(concertNum, SeatLevelNum, seatLevel, seatPrice)
					VALUES (concert_seq.NEXTVAL, #{seatLevelNum}, #{seatLevel}, #{seatPrice})  -->
</insert> <!-- 다중insert는 업데이트를 이용해야함. -->

<insert id="insertSession" parameterType="com.sp.admin.insertCon.Concerts">
	INSERT INTO concertSession(concertNum, sessionNum, sessionDate,sessionTime)
		VALUES (#{concertNum}, concertsession_seq.NEXTVAL, #{sessionDate},#{sessionTime})
</insert>

<!-- 결제를 위한 가격정보등록 -->
<insert id="insertPrice" parameterType="com.sp.admin.insertCon.Concerts">
  insert  INTO seatPrice (concertNum, SeatLevelNum, seatPrice)
					VALUES (#{concertNum}, #{seatLevelNum},  #{seatPrice})
</insert>
<select id="listPrice" parameterType="map" resultType="com.sp.admin.insertCon.Concerts"> 
	SELECT seatLevel, concertNum,seatPrice
		FROM seatPrice sp
		JOIN seatLevel  sl ON sp.seatLevelNum=sl.seatLevelNum
		where concertNum=
		ORDER BY sp.seatLevelNum
</select>

<update id="updateConcerts" parameterType="com.sp.admin.insertCon.Concerts">
	UPDATE concert SET concertName=#{concertName}, concertStart=#{concertStart}, totalTime=#{totalTime}, host=#{host}, supervise=#{supervise},
						genre=#{genre}, ratingNum=#{ratingNum}, hallNum=#{hallNum}, 
						conProfileImage=#{conProfileImage}, eventCount=#{eventCount}, seatPriceList=#{seatPriceList}
						WHERE concertNum=#{concertNum}
</update>

<update id="updateSession" parameterType="com.sp.admin.insertCon.Concerts">
	UPDATE concertSession SET sessionDate=#{sessionDate}, sessionTime=#{sessionTime} WHERE concertNum=#{concertNum}
</update>

<update id="updatePrice" parameterType="com.sp.admin.insertCon.Concerts">
	UPDATE seatPrice SET seatPrice=#{seatPrice} WHERE cocnertNum=#{concertNum}
</update>

<delete id="deleteConcerts" parameterType="Integer">
	DELETE FROM concert WHERE concertNum=#{concertNum} 
</delete>

<delete id="deleteSession" parameterType="Integer">
	DELETE FROM concertsession WHERE cocnertNum=#{concertNum}
</delete>

<select id="listConcerts" parameterType="map" resultType="com.sp.admin.insertCon.Concerts"> <!-- 포토갤러리 형식으로 고칠것. -->
	SELECT * FROM (
    SELECT ROWNUM rnum, tb.* FROM (
        SELECT concertNum, concertName,TO_CHAR(concertStart, 'YYYY-MM-DD') concertStart, 
                TO_CHAR(concertEnd, 'YYYY-MM-DD') concertEnd, 
                totalTime, genre, hallName,c.ratingNum, ratingName, host, supervise
                FROM concert c 
                JOIN concertHall ch ON c.hallNum = ch.hallNum
                JOIN rating r ON c.ratingNum = r.ratingNum 
                ORDER BY concertNum ASC 
<![CDATA[
			) tb WHERE ROWNUM <= #{end}
		) WHERE rnum >= #{start}
	]]>
</select>

</mapper>